这是一个动态规划题
每一个nu[n]有4种可能，分别是数列中某一项乘2或7或13或19得到




就是从第一个素数开始乘
先把min设到最大
比如 2,7,13,19   idx[0 0 0 0]中的4个数分别代表这一轮的min里有几个相对应的素数

i=1
2*1(此处的1来自于Ugly数组un[0]=1)=2
之后7*1,13*1,19*1均大于2，所以un[1]=2
在idx中对应2的位置加1，即idx[1 0 0 0]

i=2
2*2   7*1  13*1   19*1  比较，依旧是2*2小，un[2]=2*2=4
idx[2 0 0 0]

i=3
2*4   7*1  13*1   19*1  比较，这里2*4的4是指idx0=2，un[2]=4 ,7*1最小,un[3]=7
idx[2 1 0 0]

i=4
2*4   7*2  13*1   19*1  un[4]=8
idx[3 1 0 0]

i=5
2*7   7*2  13*1   19*1   un[5]=13
idx[3 1 1 0]

i=6
2*7   7*2   13*2   19*1  un[6]=14   此时2*7与7*2均为14，idx中两个都要加

以此类推